name: Build, Test, and Push Datastream Docker Containers (Multi-Arch)

on:
  push:
    branches: [main]
    paths:
      - 'docker/**'
      - 'forcingprocessor/**'
      - 'scripts/**'
      - 'python_tools/**'
      - '.github/workflows/*.yaml'

permissions:
  contents: read

jobs:
  build-test-push-multiplatform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install packages for datastream
        run: |
          sudo apt-get update
          sudo apt-get install git pigz -y

      - name: Build and push Docker images (multi-arch)
        run: |
          ./scripts/docker_builds.sh -p -e -f -d

      - name: Test docker containers
        run: |
            ./scripts/datastream -s 202006200100 -e 202006200200 -C NWM_RETRO_V3 -d $(pwd)/data/datastream_test -g $(pwd)/palisade.gpkg -R $(pwd)/configs/ngen/realization_sloth_nom_cfe_pet.json

  build-and-push-multiplatform:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-test-push-multiplatform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install packages for datastream
        run: |
          sudo apt-get update
          sudo apt-get install git pigz -y

      - name: Build and push Docker images (multi-arch)
        run: |
          ./scripts/docker_builds.sh -p -e -f -d            