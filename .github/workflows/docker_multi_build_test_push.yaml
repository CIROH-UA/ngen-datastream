name: Build and Test Datastream Docker Containers (Multi-Arch)

on:
  push:
    branches: [main]
    paths:
      - 'docker/**'
      - 'forcingprocessor/**'
      - 'scripts/**'
      - 'python_tools/**'

permissions:
  contents: read

jobs:
  build-test-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install packages for datastream
        run: |
          sudo apt-get update
          sudo apt-get install git pigz -y

      - name: Build Docker images (no push)
        run: |
          ./scripts/docker_builds.sh -e -f -d -p -t latest-x86

      - name: Test docker containers
        run: |
          curl -L -O https://ngen-datastream.s3.us-east-2.amazonaws.com/palisade.gpkg
          export DS_TAG=latest-x86 FP_TAG=latest-x86
          ./scripts/datastream -s 202006200100 -e 202006200200 -C NWM_RETRO_V3 -d $(pwd)/data/datastream_test -g $(pwd)/palisade.gpkg -R $(pwd)/configs/ngen/realization_sloth_nom_cfe_pet.json

  build-test-arm64:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install packages for datastream
        run: |
          sudo apt-get update
          sudo apt-get install git pigz -y

      - name: Build Docker images (no push)
        run: |
          ./scripts/docker_builds.sh -e -f -d -p -t latest-arm64

      - name: Test docker containers
        run: |
          curl -L -O https://ngen-datastream.s3.us-east-2.amazonaws.com/palisade.gpkg
          export DS_TAG=latest-arm64 FP_TAG=latest-arm64
          ./scripts/datastream -s 202006200100 -e 202006200200 -C NWM_RETRO_V3 -d $(pwd)/data/datastream_test -g $(pwd)/palisade.gpkg -R $(pwd)/configs/ngen/realization_sloth_nom_cfe_pet.json          


  create-manifest:
    name: Create and Push Manifest
    needs: [build-test-amd64, build-test-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push manifest datastream-deps
        run: |
          docker manifest create awiciroh/datastream-deps:latest \
            --amend awiciroh/datastream-deps:latest-x86 \
            --amend awiciroh/datastream-deps:latest-arm64

          docker manifest push awiciroh/datastream:latest

      - name: Create and push manifest datastream
        run: |
          docker manifest create awiciroh/datastream:latest \
            --amend awiciroh/datastream:latest-x86 \
            --amend awiciroh/datastream:latest-arm64

          docker manifest push awiciroh/datastream:latest       
          
      - name: Create and push manifest datastream
        run: |
          docker manifest create awiciroh/forcingprocessor:latest \
            --amend awiciroh/forcingprocessor:latest-x86 \
            --amend awiciroh/forcingprocessor:latest-arm64

          docker manifest push awiciroh/forcingprocessor:latest              