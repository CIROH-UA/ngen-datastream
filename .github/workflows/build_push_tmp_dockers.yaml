name: Build, Test, and Push Docker Containers

on:
  pull_request:
    branches:
      - main    
    paths:      
      - 'docker/**'
      - 'forcingprocessor/**'
      - 'scripts/docker_build.sh'  
      - 'python_tools/**'
      - '.github/workflows/forcingprocessor.yml'
      - '.github/workflows/datastream_python.yml'        

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2  

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}  
        
    - name: Build and push with temporary tags
      run: |
        ./scripts/docker_builds.sh -e -f -d -t tmp-${{ github.run_id }} -p
        
  test-forcingprocessor:
    runs-on: ubuntu-latest
    needs: build-and-test
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]    
    steps:
      - name: Pull forcingprocessor
        run: docker pull awiciroh/forcingprocessor:temp-${{ github.run_id }}

      - name: Pytest forcingprocessor
        run: |
          docker run --platform ${{ matrix.platform }} awiciroh/forcingprocessor:temp-${{ github.run_id }} python3.9 -m pytest -vv --deselect="tests/test_forcingprocessor.py::test_google_cloud_storage" --deselect="tests/test_forcingprocessor.py::test_gcs" --deselect="tests/test_forcingprocessor.py::test_gs" --deselect="tests/test_forcingprocessor.py::test_ciroh_zarr" --deselect="tests/test_forcingprocessor.py::test_nomads_post_processed" --deselect="tests/test_forcingprocessor.py::test_retro_ciroh_zarr" --deselect="tests/test_hf2ds.py" --deselect="tests/test_plotter.py"
          docker run --platform ${{ matrix.platform }} awiciroh/forcingprocessor:temp-${{ github.run_id }} python3.9 -m pytest -vv tests/test_hf2ds.py
          docker run --platform ${{ matrix.platform }} awiciroh/forcingprocessor:temp-${{ github.run_id }} python3.9 -m pytest -vv tests/test_plotter.py
          docker run --platform ${{ matrix.platform }} awiciroh/forcingprocessor:temp-${{ github.run_id }} python3.9 -m pytest -vv -k test_google_cloud_storage 
          docker run --platform ${{ matrix.platform }} awiciroh/forcingprocessor:temp-${{ github.run_id }} python3.9 -m pytest -vv -k test_gs 
          docker run --platform ${{ matrix.platform }} awiciroh/forcingprocessor:temp-${{ github.run_id }} python3.9 -m pytest -vv -k test_gcs       

  test-datastream:
    runs-on: ubuntu-latest
    needs: build-and-test
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]    
    steps:
      - name: Pull datastream
        run: docker pull awiciroh/datastream:temp-${{ github.run_id }}

      - name: Pytest datastream
        run: |
          docker run --platform ${{ matrix.platform }} awiciroh/datastream:temp-${{ github.run_id }} python3.9 -m pytest -vv python_tools/

  test-stream:
    runs-on: ubuntu-latest
    needs: build-and-test
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]    
    steps:
      - name: Pull datastream
        run: docker pull awiciroh/datastream:temp-${{ github.run_id }}

      - name: Pull forcingprocessor
        run: docker pull awiciroh/forcingprocessor:temp-${{ github.run_id }}        

      - name: Install packages for datastream
        run: |
          curl -L -O https://github.com/lynker-spatial/hfsubsetCLI/releases/download/v1.1.0/hfsubset-v1.1.0-linux_amd64.tar.gz && tar -xzvf hfsubset-v1.1.0-linux_amd64.tar.gz && sudo mv ./hfsubset /usr/bin/hfsubset && sudo apt-get install git pip pigz -y        

      - name: Test stream v2.1
        run: |
          curl -L -O https://ngen-datastream.s3.us-east-2.amazonaws.com/palisade.gpkg
          ./scripts/stream.sh -s 202006200100 -e 202006200200 -C NWM_RETRO_V3 -d $(pwd)/data/datastream_test -g $(pwd)/palisade.gpkg -R $(pwd)/configs/ngen/realization_sloth_nom_cfe_pet.json

      - name: Test stream v2.2
        run: |
          hfsubset -o ./poudre.gpkg -r "2.2" -t hl "Gages-06752260"
          ./scripts/stream.sh -s 202006200100 -e 202006200200 -C NWM_RETRO_V3 -d $(pwd)/data/datastream_test -g $(pwd)/poudre.gpkg -R $(pwd)/configs/ngen/realization_sloth_nom_cfe_pet.json

  push-final:
    needs: test-stream
    runs-on: ubuntu-latest
    if: ${{ always() && needs.test-stream.result == 'success' }}
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Rebuild and push with proper tags
        run: |
          ./scripts/docker_builds.sh -e -f -d -p -t latest